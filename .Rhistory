arrange(desc(date))
dataRaw
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
arrange(ISO3,desc(date)) %>%
mutate(casesNew = casesCum - (lag(casesCum,1,default = 0)),
deathsNew = deathsCum - (lag(deathsCum,1,default = 0)),
recovNew = recovCum - (lag(recovCum,1,default = 0)),
active = casesCum - recovCum)
dataRaw <- inner_join(
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
arrange(ISO3,desc(date)) %>%
mutate(casesNew = casesCum - (lag(casesCum,1,default = 0)),
deathsNew = deathsCum - (lag(deathsCum,1,default = 0)),
recovNew = recovCum - (lag(recovCum,1,default = 0)),
active = casesCum - recovCum)
dataRaw
dataRaw[ dataRaw$ISO3 != "",]
dataRaw <- inner_join(
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(casesNew = casesCum - (lag(casesCum,1,default = 0, order_by = desc(date))),
deathsNew = deathsCum - (lag(deathsCum,1,default = 0, order_by = desc(date))),
recovNew = recovCum - (lag(recovCum,1,default = 0, order_by = desc(date))),
active = casesCum - recovCum)
dataRaw
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(casesNew = - casesCum + (lag(casesCum,1,default = 0, order_by = desc(date))),
deathsNew = - deathsCum + (lag(deathsCum,1,default = 0, order_by = desc(date))),
recovNew = - recovCum + (lag(recovCum,1,default = 0, order_by = desc(date))),
active = casesCum - recovCum)
dataRaw
dataRaw <- inner_join(
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(casesNew = - casesCum + (lag(casesCum,1,default = 0, order_by = desc(date))),
deathsNew = - deathsCum + (lag(deathsCum,1,default = 0, order_by = desc(date))),
recovNew = - recovCum + (lag(recovCum,1,default = 0, order_by = desc(date))),
active = casesCum - recovCum)
dataRaw
dataRaw <- inner_join(
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(casesNew = casesCum - (lead(casesCum,1,default = 0, order_by = desc(date))),
deathsNew = deathsCum - (lead(deathsCum,1,default = 0, order_by = desc(date))),
recovNew = recovCum - (lag(recovCum,1,default = 0, order_by = desc(date))),
active = casesCum - recovCum)
dataRaw
dataRaw <- inner_join(
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(casesNew = casesCum - (lead(casesCum,1,default = 0, order_by = desc(date))),
deathsNew = deathsCum - (lead(deathsCum,1,default = 0, order_by = desc(date))),
recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))),
active = casesCum - recovCum)
dataRaw
getData <- function(){
casesDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_confirmed_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_confirmed_global.csv",
comment.char = "#")
deathDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_deaths_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_deaths_global.csv",
comment.char = "#")
recoveredDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_recovered_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_recovered_global.csv",
comment.char = "#")
dataRaw <- inner_join(
inner_join(casesDataRaw, deathDataRaw, by = setdiff(names(casesDataRaw),"Value"), suffix = c(".cases",".deaths")),
recoveredDataRaw, by = setdiff(names(recoveredDataRaw),c("Value"))) %>%
select(ISO3 = ISO.3166.1.Alpha.3.Codes, date = Date, casesCum = Value.cases, deathsCum = Value.deaths, recovCum = Value) %>%
mutate(date = ymd(date)) %>%
arrange(desc(casesCum),desc(deathsCum)) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(casesNew = casesCum - (lead(casesCum,1,default = 0, order_by = desc(date))),
deathsNew = deathsCum - (lead(deathsCum,1,default = 0, order_by = desc(date))),
recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))),
active = casesCum - recovCum)
}
#observe({ # update the location selectInput on map clicks
#    p <- input$worldMap_shape_click
#    output$country <- p$id
#    print(p)
#})
covidData <- getData()
covid_plot <- group_by(covidData,ISO3) %>%
filter(row_number() == 1)
head(covid_plot)
covid_plot <- group_by(covidData,ISO3) %>%
filter(row_number() == 1) %>%
summarise(cases = casesCum,
deaths = deathsCum,
active = active,
labelText = paste(ISO3, "Total Cases: ", casesCum, "Deaths: ", deathsCum,"Active Cases: ", active, sep= "\n"))
head(covid_plot)
covid_plot <- group_by(covidData,ISO3) %>%
filter(row_number() == 1) %>%
summarise(cases = casesCum,
deaths = deathsCum,
active = active,
labelText = paste(ISO3, "Total Cases: ", casesCum, "Deaths: ", deathsCum,"Active Cases: ", active, sep= " \n "))
covid_plot <- group_by(covidData,ISO3) %>%
filter(row_number() == 1) %>%
summarise(cases = casesCum,
deaths = deathsCum,
active = active,
labelText = cat(paste(ISO3, "Total Cases: ", casesCum, "Deaths: ", deathsCum,"Active Cases: ", active, sep= " \n ")))
covid_plot <- group_by(covidData,ISO3) %>%
filter(row_number() == 1) %>%
summarise(cases = casesCum,
deaths = deathsCum,
active = active,
labelText = paste("<p>", ISO3, "Total Cases: ", casesCum, " \nDeaths: ", deathsCum,"\nActive Cases: ", active,"</p>", sep= "")))
covid_plot <- group_by(covidData,ISO3) %>%
filter(row_number() == 1) %>%
summarise(cases = casesCum,
deaths = deathsCum,
active = active,
labelText = paste("<p>", ISO3, "Total Cases: ", casesCum, " \nDeaths: ", deathsCum,"\nActive Cases: ", active, "</p>", sep= ""))
covid_plot
runApp('R/coursera_data_science/covid19_liveticker/Covid19_Liveticker')
runApp()
runApp('R/coursera_data_science/covid19_liveticker/Covid19_Liveticker')
library(htmltools)
runApp('R/coursera_data_science/covid19_liveticker/Covid19_Liveticker')
mean(is.na(covidData$ISO3))
mean(is.na(covid_plot$ISO3))
world_spdf@data <- left_join(world_spdf@data, covid_plot, by = c("ISO3" = "ISO3"))
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE)
world_spdf@data <- left_join(world_spdf@data, covid_plot, by = c("ISO3" = "ISO3"))
library(shiny)
library(leaflet)
library(maps)
library(dplyr)
library(rgdal)
library(openxlsx)
library(RColorBrewer)
library(htmltools)
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE)
setwd("~/R/coursera_data_science/covid19_liveticker/Covid19_Liveticker")
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE)
world_spdf@data <- left_join(world_spdf@data, covid_plot, by = c("ISO3" = "ISO3"))
mean(is.na(covid_plot$ISO3))
mean(is.na(world_spdf@data$ISO3))
mean(is.na(world_spdf@data$cases))
mean(is.na(covid_plot$cases))
mean(covid_plot$ISO3 %in% world_spdf@data$ISO3))
mean(covid_plot$ISO3 %in% world_spdf@data$ISO3)
covid_plot$ISO3[covid_plot$ISO3 %in% world_spdf@data$ISO3)]
covid_plot$ISO3[covid_plot$ISO3 %in% world_spdf@data$ISO3]
covid_plot$ISO3[!covid_plot$ISO3 %in% world_spdf@data$ISO3]
covid_plot$ISO3[!world_spdf@data$ISO3 %in% covid_plot$ISO3]
runApp()
runApp()
length(unique(covidData$ISO3))
length(unique(world_spdf@data$ISO3))
data <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
data
head(data[data$iso_code == "AUT"])
head(data[data$iso_code == "AUT",])
head(data[data$iso_code == "AUT",],10)
head(data[data$iso_code == "AUT",],100)
head(data[data$iso_code == "AUT",],1)
tail(data[data$iso_code == "AUT",],1)
length(unique(data$iso_code))
length(unique(data$iso_code) %in% world_spdf$ISO3)
length(world_spdf$ISO3 %in% unique(data$iso_code))
mean(world_spdf$ISO3 %in% unique(data$iso_code))
mean(unique(data$iso_code) %in% world_spdf$ISO3)
unique(data$iso_code)[unique(data$iso_code) %in% world_spdf$ISO3]
unique(data$iso_code)[!unique(data$iso_code) %in% world_spdf$ISO3]
unique(data$iso_code)[!world_spdf$ISO3 %in% unique(data$iso_code)]
unique(world_spdf$ISO3)[!world_spdf$ISO3 %in% unique(data$iso_code)]
head(data,1)
datahelp <- read.csv("https://datahub.io/core/covid-19/r/0.html")
head(datahelp)
datahelp <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv")
head(datahelp)
head(datahelp[datahelp$Date == "2020-04-21"])
head(datahelp[datahelp$Date == "2020-04-21",])
head(datahelp[datahelp$Date == "2020-04-21",],20)
datahelpme <- read.csv("https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv")
names(datahelpme)
country <- read.csv("https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/blob/master/all/all.csv")
head(country)
country <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
head(country)
mean(datahelpme$Country %in% country$name)
country$name[!datahelpme$Country %in% country$name,]
country$name[!datahelpme$Country %in% country$name]
datahelpme$Country[!datahelpme$Country %in% country$name]
unique(datahelpme$Country[!datahelpme$Country %in% country$name])
dataRaw <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv")
head(dataRaw)
dataRaw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
head(dataRaw)
mean(datahelpme$Country %in% dataRaw$location)
datahelpme$Country[datahelpme$Country %in% dataRaw$location]
datahelpme$Country[!datahelpme$Country %in% dataRaw$location]
mean(datahelpme$Country %in% dataRaw$location)
unique(datahelpme$Country[!datahelpme$Country %in% dataRaw$location])
unique(dataRaw$location)
datahelp <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv")
datahelp$Country.Region
unique(datahelp$Country.Region)
mean(datahelp$Country.Region %in% dataRaw$location)
unique(datahelp$Country.Region[datahelp$Country.Region %in% dataRaw$location])
unique(datahelp$Country.Region[!datahelp$Country.Region %in% dataRaw$location])
unique(datahelpme$Country[!datahelpme$Country %in% dataRaw$location])
install.packages("countrycode")
library(countrycode)
countrycode::countrycode("US")
?countrycode?
)
?countrycode
?codelist
countrycode::countrycode(sourcevar = "US",origin = "country.english",destination = "iso3c")
countrycode::countrycode(sourcevar = "Taiwan",origin = "country.english",destination = "iso3c")
countrycode::countrycode(sourcevar = "Taiwan",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "Taiwan*",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "US",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "Korea,Sourth",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "Korea,North",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "Korea,South",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "Korea",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "Korea,Norf",origin = "country.name",destination = "iso3c")
countrycode::countrycode(sourcevar = "Korea,Sourth",origin = "country.name",destination = "iso3c")
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>% countrycode(country, origin = "country.name", destination = "iso3c")#Deaths,recovered,cases, no ISO3
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv")
datarecov
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>% countrycode(Country.Region, origin = "country.name", destination = "iso3c")#Deaths,recovered,cases, no ISO3
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>% mutate(ISO3 =countrycode(Country.Region, origin = "country.name", destination = "iso3c"))#Deaths,recovered,cases, no ISO3
countrycode("Diamond Princess", "country.name","country.name")
head(datarecov)
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>%
transmute(ISO3 = countrycode(Country.Region, origin = "country.name", destination = "iso3c"),
date = ymd(Date),
recovCum = Recovered) %>%
group_by(ISO3,date) %>%
mutate(recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))))
datarecov
datarecov[datarecov$date > ymd("2020-04-20")]
datarecov[datarecov$date > ymd("2020-04-20"),]
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>%
transmute(ISO3 = countrycode(Country.Region, origin = "country.name", destination = "iso3c"),
date = ymd(Date),
recovCum = Recovered) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))))
datarecov[datarecov$date > ymd("2020-04-20"),]
datarecov[datarecov$ISO3 == "AUS",]
tail(datarecov[datarecov$ISO3 == "AUS",])
head(datarecov[datarecov$ISO3 == "AUS",])
datarecov[datarecov$ISO3 == "AUS",]
datarecov[datarecov$ISO3 == "AUS" & datarecov$date > ymd("2020-04-20"),]
datarecov[datarecov$ISO3 == "AUS" & datarecov$date > ymd("2020-04-15"),]
datarecov[datarecov$ISO3 == "AUT" & datarecov$date > ymd("2020-04-15"),]
datarecov[datarecov$ISO3 == "AUT" & datarecov$date > ymd("2020-04-10"),]
datarecov[datarecov$ISO3 == "AUT" & datarecov$date > ymd("2020-04-14"),]
datarecov[datarecov$ISO3 == "AUT" & datarecov$date > ymd("2020-04-13"),]
datarecov[datarecov$ISO3 == "AUT" & datarecov$date > ymd("2020-04-12"),]
datarecov[datarecov$ISO3 == "AUT" & datarecov$date > ymd("2020-04-11"),]
datarecov[datarecov$ISO3 == "AUS" & datarecov$date > ymd("2020-04-11"),]
names(dataRaw)
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date"))
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>%
transmute(ISO3 = countrycode(Country.Region, origin = "country.name", destination = "iso3c"),
date = (Date),
recovCum = Recovered) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))))
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date"))
covidData
head(covidData,1)
head(covidData[covidData$iso_code == "AUT"],1)
head(covidData[covidData$iso_code == "AUT",],1)
head(covidData[covidData$iso_code == "AUT" & covidData$date > ymd("2020-04-15"),],1)
head(covidData[covidData$iso_code == "AUT" & covidData$date > ymd("2020-04-21"),],1)
head(covidData[covidData$iso_code == "AUT" & covidData$date > ymd("2020-04-20"),],1)
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date")) %>%
transmute(ISO3 = iso_code, date = ymd(date),
casesCum = total_cases, casesNew = new_cases,
deathsCum = total_deaths, deathsNew = new_deaths,
recovCum, recovNew,
testsCum = total_tests, casesNew = new_tests)
head(covidData[covidData$iso_code == "AUT" & covidData$date > ymd("2020-04-20"),],1)
head(covidData,1)
head(covidData)
head(covidData[covidData$iso_code == "AUT" & covidData$date > ymd("2020-04-15"),],1)
head(covidData[covidData$iso_code == "AUS" & covidData$date > ymd("2020-04-15"),],1)
head(covidData[covidData$ISO3 == "AUS" & covidData$date > ymd("2020-04-15"),],1)
head(covidData[covidData$ISO3 == "AUT" & covidData$date > ymd("2020-04-15"),],1)
head(covidData[covidData$ISO3 == "AUT" & covidData$date > ymd("2020-04-15"),],10)
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date")) %>%
transmute(ISO3 = iso_code, date = ymd(date),
casesCum = total_cases, casesNew = new_cases,
deathsCum = total_deaths, deathsNew = new_deaths,
recovCum, recovNew,
testsCum = total_tests, casesNew = new_tests,
active = total_cases - )
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date")) %>%
transmute(ISO3 = iso_code, date = ymd(date),
casesCum = total_cases, casesNew = new_cases,
deathsCum = total_deaths, deathsNew = new_deaths,
recovCum, recovNew,
testsCum = total_tests, casesNew = new_tests,
active = total_cases - recovCum)
head(covidData[covidData$ISO3 == "AUT" & covidData$date > ymd("2020-04-15"),],10)
runApp()
library(tidyr)
?fill
runApp()
?plotly
?plotly
?plotly
??plotly
?plotly
plotly()
library(plotly)
?plotly
?plot_ly
runApp()
?ggplotly
?plot_ly
runApp()
runApp()
runApp()
plot_ly(data = covidData[covidData$ISO3 == p$id,], x = ~date, y= ~casesCum)
plot_ly(data = covidData[covidData$ISO3 == "AUT",], x = ~date, y= ~casesCum)
runApp()
runApp()
runApp()
runApp()
runApp()
?plot_ly
runApp()
?layout
runApp()
runApp()
runApp()
runApp()
runApp()
covidData$casesNew[covidData$ISO3 == "CHN"]
covidData$casesCum[covidData$ISO3 == "CHN"]
covidData[covidData$ISO3 == "CHN"]
covidData[covidData$ISO3 == "CHN",]
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>%
transmute(ISO3 = countrycode(Country.Region, origin = "country.name", destination = "iso3c"),
date = (Date),
recovCum = Recovered) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))))
#casesDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_confirmed_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_confirmed_global.csv",
#                         comment.char = "#")
#deathDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_deaths_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_deaths_global.csv",
#                         comment.char = "#")
#recoveredDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_recovered_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_recovered_global.csv",
#                             comment.char = "#")
dataRaw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv") #cases,deaths,tests,new and cumsum, abs and per mil/tsd
dataRaw[dataRaw$iso_code == "CHN",]
tail(dataRaw[dataRaw$iso_code == "CHN",],20)
tail(dataRaw[dataRaw$iso_code == "CHN" & is.na(dataRaw$new_cases),],20)
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date")) %>%
fill(recovCum, .direction = "down") %>%
transmute(ISO3 = iso_code, date = ymd(date),
casesCum = total_cases, casesNew = new_cases,
deathsCum = total_deaths, deathsNew = new_deaths,
recovCum, recovNew,
testsCum = total_tests, casesNew = new_tests,
active = total_cases - recovCum) %>%
arrange(desc(date))
covidData[covidData$ISO3 == "CHN",]
#casesDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_confirmed_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_confirmed_global.csv",
#                         comment.char = "#")
#deathDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_deaths_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_deaths_global.csv",
#                         comment.char = "#")
#recoveredDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_recovered_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_recovered_global.csv",
#                             comment.char = "#")
dataRaw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv") #cases,deaths,tests,new and cumsum, abs and per mil/tsd
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>%
transmute(ISO3 = countrycode(Country.Region, origin = "country.name", destination = "iso3c"),
date = (Date),
recovCum = Recovered) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))))
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date")) %>%
fill(recovCum, .direction = "down") %>%
transmute(ISO3 = iso_code, date = ymd(date),
casesCum = total_cases, casesNew = new_cases,
deathsCum = total_deaths, deathsNew = new_deaths,
recovCum, recovNew,
testsCum = total_tests, casesNew = new_tests,
active = total_cases - recovCum) %>%
arrange(desc(date))
covidData[covidData$ISO3 == "CHN",]
runApp()
covidData <- left_join(dataRaw,datarecov, by = c("iso_code" = "ISO3","date" = "date")) %>%
fill(recovCum, .direction = "down") %>%
mutate(ISO3 = iso_code, date = ymd(date),
casesCum = total_cases, casesNew = new_cases,
deathsCum = total_deaths, deathsNew = new_deaths,
recovCum, recovNew,
testsCum = total_tests, casesNew = new_tests,
active = total_cases - recovCum) %>%
arrange(desc(date))
covidData[covidData$ISO3 == "CHN",]
runApp()
runApp()
runApp()
#casesDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_confirmed_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_confirmed_global.csv",
#                         comment.char = "#")
#deathDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_deaths_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_deaths_global.csv",
#                         comment.char = "#")
#recoveredDataRaw <- read.csv("https://data.humdata.org/hxlproxy/data/download/time_series_covid19_recovered_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_recovered_global.csv",
#                             comment.char = "#")
dataRaw <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv") %>% mutate(date = ymd(date),IS03 = as.character(iso_code)) #cases,deaths,tests,new and cumsum, abs and per mil/tsd
datarecov <- read.csv("https://datahub.io/core/covid-19/r/time-series-19-covid-combined.csv") %>%
transmute(ISO3 = countrycode(Country.Region, origin = "country.name", destination = "iso3c"),
date = ymd(Date),
recovCum = Recovered) %>%
group_by(ISO3,date) %>%
filter(row_number() == 1) %>%
ungroup() %>%
group_by(ISO3) %>%
mutate(recovNew = recovCum - (lead(recovCum,1,default = 0, order_by = desc(date))))
covidData <- left_join(dataRaw,datarecov, by = c("ISO3" = "ISO3","date" = "date")) %>%
fill(recovCum, .direction = "down") %>%
mutate(ISO3 = iso_code, date = ymd(date),
casesCum = total_cases, casesNew = new_cases,
deathsCum = total_deaths, deathsNew = new_deaths,
recovCum, recovNew,
testsCum = total_tests, casesNew = new_tests,
active = total_cases - recovCum) %>%
arrange(desc(date))
names(dataRaw)
runApp()
names(data)
names(dataRaw)
runApp()
covidData[covidData$ISO3 == "CHN",]
runApp()
